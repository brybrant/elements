@use 'sass:color';
@use 'sass:math';

$sqrt2: math.sqrt(2);

// particle keyframes
@keyframes airParticle {
  25% {
    opacity: 1;
    left: 50%;
  }
  50% {
    opacity: 0;
    left: 100%;
  }
}

// core keyframes
@keyframes airCoreBefore {
  100% {
    transform: rotate(360deg);
  }
}
@keyframes airCoreAfter {
  100% {
    transform: rotate(540deg) scale(0.8);
  }
}
@keyframes airCorePulse {
  40% {
    opacity: 0;
  }
  60% {
    opacity: 0;
  }
}

.air {
  background: linear-gradient(oklab(0.3 -0.01 -0.02), oklab(0.4 -0.01 -0.02));
  // particle
  .particle-container {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    transform: scale(1.5);
  }
  .particle {
    position: relative;
    height: 1.5625%;
    &:before, &:after {
      content: '';
      position: absolute;
      left: 0;
      display: block;
      border-top: 0.125rem solid transparent;
      border-bottom: 0.125rem solid transparent;
      width: 0;
      height: 0;
      opacity: 0;
      animation: 2s linear 0s infinite reverse airParticle;
      will-change: left, opacity;
    }
    &:before {
      border-right: 0.1875rem solid #666;
    }
    &:after {
      border-left: 0.1875rem solid #fff;
      animation-direction: normal;
    }
    &:nth-child(64) {
      display: none;
    }
  }
  // fragment
  .fragment-container {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    transform: scale(1.6);
    &:after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      display: block;
      background: radial-gradient(
        closest-side,
        #fff,
        #eee,
        rgba(#cfd2d6, .8),
        rgba(#a1a7af, .6),
        rgba(#747e8a, .4),
        rgba(#4a5766, .2),
        rgba(#234, 0)
      );
      transform: scale(1.25);
    }
  }
  .fragment {
    position: relative;
    height: 6.25%;
    &:before, &:after {
      content: '';
      position: absolute;
      left: 0;
      display: block;
      border-radius: 50% 0 0 50%;
      width: 0.375rem;
      height: 0.375rem;
      background: linear-gradient(90deg, rgba(#888, .5), rgba(#888, 0));
      opacity: 0;
      will-change: left, opacity;
      animation: 2s linear 0s infinite reverse airParticle;
    }
    &:after {
      border-radius: 0 50% 50% 0;
      background: linear-gradient(270deg, rgba(#fff, .5), rgba(#fff, 0));
      animation-direction: normal;
    }
    &:first-child {
      margin-top: 3.125%;
    }
    &:nth-child(16) {
      display: none;
    }
  }
  // core
  .core-container {
    position: relative;
    width: 100%;
    height: 100%;
    mix-blend-mode: plus-lighter;
    filter: blur(2px);
    transform: scale($sqrt2);
  }
  .core {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    &:before, &:after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      border-radius: 50%;
      border-top: 1px solid rgba(#fff, .5);
      border-right: 1px solid rgba(#fff, .5);
      animation: 4s linear 0s infinite airCoreBefore, 5s linear 0s infinite airCorePulse;
      will-change: opacity, transform;
    }
    &:after {
      transform: rotate(180deg) scale(0.8);
      animation-name: airCoreAfter, airCorePulse;
      animation-direction: reverse;
    }
  }
  .button {
    background: oklab(0.5 -0.01 -0.02);
    &:hover {
      background: oklab(0.55 -0.01 -0.02);
    }
    &:active {
      background: oklab(0.45 -0.01 -0.02);
    }
  }
}

// particle animation
$one32: math.div(1, 32);

@for $i from 1 through 31 {
  $circleWidth: 100% * math.sqrt(1 - math.pow($i * $one32 - 1, 2));
  $scale: $one32 * $i + 1;

  .air .particle {
    &:nth-child(#{$i}), &:nth-child(#{64 - $i}) {
      width: $circleWidth;
      &:before, &:after {
        transform: scale($scale);
      }
    }
  }
}

.air .particle:nth-child(32) {
  width: 100%;
  &:before, &:after {
    transform: scale(2);
  }
}

$one64: math.div(1, 64);

@for $i from 1 through 16 {
  .air .particle:nth-child(16n + #{$i}) {
    &:before, &:after {
      animation-delay: 8s * $one64 * ($i - 1);
    }
  }
}

// fragment animation
$one8: math.div(1, 8);

@for $i from 1 through 7 {
  $circleWidth: 100% * math.sqrt(1 - math.pow($i * $one8 - 1, 2));
  $scale: $one8 * $i + 1;

  .air .fragment {
    &:nth-child(#{$i}), &:nth-child(#{16 - $i}) {
      width: $circleWidth;
      &:before, &:after {
        transform: scale($scale);
      }
    }
  }
}

.air .fragment:nth-child(8) {
  width: 100%;
  &:before, &:after {
    transform: scale(2);
  }
}

$one16: math.div(1, 16);

@for $i from 1 through 8 {
  .air .fragment:nth-child(8n + #{$i}) {
    &:before, &:after {
      animation-delay: 4s * $one16 * ($i - 1);
    }
  }
}

// core animation
@for $i from 1 through 4 {
  $rotation: math.div(360deg, 4) * ($i - 1);
  $duration: 4s - (math.div(3s, 4) * ($i - 1));
  $scale: math.pow(0.6, ($i - 1));

  .air .core:nth-child(#{$i}) {
    transform: rotate($rotation) scale($scale);
    &:before {
      animation-duration: $duration, $duration + 1;
    }
    &:after {
      animation-duration: $duration - 0.25, $duration + 0.75;
    }
  }
}