@use 'sass:color';
@use 'sass:math';
@use '../../node_modules/@brybrant/sass-okhsv-okhsl' as convert;

// particle keyframes
@keyframes water-particle {
  100% {
    opacity: 1;
    transform: translateY(6rem) scale(0);
  }
}

// fragment keyframes
@keyframes water-fragment {
  100% {
    transform: rotate(45deg);
  }
}

// core keyframes
@keyframes water-core {
  100% {
    opacity: 1;
    transform: scale(0);
  }
}

.background {
  background: linear-gradient(
    convert.color_to_hex(convert.okhsl_to_rgba(250deg, 0.9, 0.3)),
    convert.color_to_hex(convert.okhsl_to_rgba(250deg, 0.8, 0.5)),
  );
}

// particle
.particle_container {
  position: absolute;
  inset: 0;

  &:after {
    content: '';
    position: absolute;
    inset: 0;
    display: block;
    background: radial-gradient(
      closest-side,
      #fff,
      convert.okhsl_to_rgba(205deg, 0.1, 0.94, 0.9),
      convert.okhsl_to_rgba(210deg, 0.2, 0.88, 0.8),
      convert.okhsl_to_rgba(215deg, 0.3, 0.82, 0.7),
      convert.okhsl_to_rgba(220deg, 0.4, 0.76, 0.6),
      convert.okhsl_to_rgba(225deg, 0.5, 0.7, 0.5),
      convert.okhsl_to_rgba(230deg, 0.6, 0.64, 0.4),
      convert.okhsl_to_rgba(235deg, 0.7, 0.58, 0.3),
      convert.okhsl_to_rgba(240deg, 0.8, 0.52, 0.2),
      convert.okhsl_to_rgba(245deg, 0.9, 0.46, 0.1),
      convert.okhsl_to_rgba(250deg, 1, 0.4, 0),
    );
    transform: scale(2);
  }
}

.particle {
  position: absolute;
  top: 0;
  left: calc(50% - 0.25rem);
  width: 0.5rem;
  height: 100%;

  &:before, &:after {
    content: '';
    position: absolute;
    top: -40%;
    left: 0;
    display: block;
    width: 0.5rem;
    height: 0.5rem;
    border-radius: 50%;
    background: #4af;
    opacity: 0;
    animation: 1s ease-in 0s infinite water-particle;
    will-change: opacity, transform;
  }
}

// fragment
.fragment_container {
  position: absolute;
  inset: 0;
  filter: blur(4px);
  animation: 1s linear 0s infinite water-fragment;
  mix-blend-mode: plus-lighter;
  will-change: transform;
}

.fragment {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;

  &:before {
    content: '';
    position: absolute;
    top: -0.75rem;
    right: 0;
    width: 3.5rem;
    height: 3.5rem;
    border-top: 1.5rem solid #4af;
    border-radius: 100% 0 0;
  }
}

// core
.core_container {
  position: relative;
  width: 100%;
  height: 100%;
  filter: blur(2px);
}

.core {
  position: absolute;
  inset: 0;

  &:before, &:after {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 50%;
    opacity: 0;
    animation: 2s ease-in 0s infinite water-core;
    will-change: opacity, transform;
  }

  &:before {
    border-top: 0.125rem solid #6cf;
    border-right: 0.125rem solid #6cf;
  }

  &:after {
    border-bottom: 0.125rem solid #6cf;
    border-left: 0.125rem solid #6cf;
  }
}

.button {
  background: convert.color_to_hex(convert.okhsl_to_rgba(250deg, 0.8, 0.4));

  &:hover {
    background: convert.color_to_hex(convert.okhsl_to_rgba(250deg, 0.8, 0.45));
  }

  &:active {
    background: convert.color_to_hex(convert.okhsl_to_rgba(250deg, 0.8, 0.35));
  }
}

// particle animation
@for $i from 1 through 64 {
  $rotation: math.div(360deg, 64) * ($i - 1);

  .particle:nth-child(#{$i}) {
    transform: rotate($rotation);

    &:before {
      transform: translateY(0) scale(0.5 * math.random() + 0.5);
      animation-duration: 2s * math.random() + 1s;
      animation-delay: 3s * math.random();
    }

    &:after {
      transform: translateY(0) scale(0.5 * math.random() + 0.5);
      animation-duration: 2s * math.random() + 1s;
      animation-delay: 3s * math.random();
    }
  }
}

// fragment animation
@for $i from 1 through 16 {
  $rotation: math.div(360deg, 16) * ($i - 1);

  .fragment:nth-child(#{$i}) {
    transform: rotate($rotation);
  }
}

// core animation
@for $i from 1 through 4 {
  $rotation: math.div(120deg, 4) * ($i - 1);
  $delay: math.div(2s, 8) * ($i - 1);

  .core:nth-child(#{$i}) {
    transform: rotate($rotation);

    &:before {
      animation-delay: $delay;
    }

    &:after {
      animation-delay: $delay + 1;
    }
  }
}